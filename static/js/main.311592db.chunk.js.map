{"version":3,"sources":["components/UI/RotaryCtrl.module.css","components/UI/NavBar.module.css","components/Login/Login.module.css","components/UI/Settings.module.css","components/assembly/Stream.module.css","components/Chat/Webcam.module.css","App.js","components/UI/NavBar.js","components/Console/Console.js","components/Chat/Chat.js","components/Login/Login.js","services/AppContext.js","components/windows/InfoWindowContent.module.css","services/PopUp.module.css","services/SocketContext.js","components/Chat/Webcam.js","components/UI/Window.js","components/media/images/xrtl_team.png","components/windows/InfoWindowContent.js","components/windows/InfoWindow.js","components/UI/RotaryCtrl.js","components/assembly/media/km100_outline.png","components/assembly/KM100.js","components/assembly/media/linear_outline.png","components/assembly/SM1ZP.js","components/UI/SliderCtrl.js","components/UI/Switch.js","components/UI/Select.js","components/UI/UpDownCtrl.js","components/UI/LeftRightCtrl.js","components/UI/Settings.js","components/assembly/Stream.js","components/UI/SwitchOnOff.js","components/assembly/LaserCtrl.js","components/experiment/MichelsonInterferometer/MichelsonInterferometer.js","components/UI/ExperimentUILayer.js","components/UI/DescriptiveTag.js","components/experiment/MichelsonInterferometer/MI_110422.js","components/UI/VirtualLayer.js","index.js","services/PopUpContext.js","components/Chat/Chat.module.css","components/Console/Console.module.css","components/UI/Window.module.css"],"names":["module","exports","App","process","title","NavBar","appCtx","useAppContext","socketCtx","useSocketContext","connectionStatusColor","connected","autoRotateColor","autoRotate","showTagsColor","showTags","cameraStatusColor","showWebcam","showBeamColor","showBeam","showInfoWindowColor","showInfoWindow","id","className","styles","navbar","navMenu","onClick","toggleConnection","toggleLogin","size","color","toggleShowVirtualLayer","toggleShowBeam","toggleAutoRotate","toggleShowTags","toggleShowWebcam","toggleShowInfoWindow","Console","props","useState","showConsole","setShowConsole","animation","setAnimation","consoleContainer","consoleMain","logs","map","payload","index","consoleHandler","closeConsole","openConsole","Chat","message","setMessage","showChat","setShowChat","chat","setChat","tempChat","useRef","current","socket","on","useEffect","chatContainer","chatMain","style","userId","msgForm","onSubmit","event","preventDefault","emit","username","fontColor","type","name","placeholder","value","onChange","e","target","required","chatHandler","closeChat","openChat","Login","col","setUsername","setfontColor","connection","setConnection","filter","createFilterOptions","theme","createTheme","palette","mode","primary","light","main","dark","contrastText","spacing","handleLogin","setNewURL","String","setShowLogin","error","showLogin","popupWindow","popupInner","container","columnSpacing","md","item","xs","autoFocus","variant","label","onKeyPress","key","marginLeft","width","helperText","Math","floor","random","document","getElementById","setNewFont","fontSize","sx","m","freeSolo","renderInput","params","newValue","inputValue","filterOptions","options","filtered","isExisting","some","option","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","renderOption","endIcon","height","marginTop","AppContext","React","createContext","useContext","AppContextProvider","children","setAutoRotate","showVirtualLayer","setShowVirtualLayer","setShowWebcam","Set","selectedComps","setSelectedComps","busyComps","setBusyComps","setLogs","setShowTags","setShowInfoWindow","setShowBeam","Provider","toggleSelectedComp","compId","has","prev","x","add","addLog","log","addBusyComp","removeBusyComp","manager","Manager","autoConnect","SocketContext","require","SocketContextProvider","setConnected","URL","setURL","setFontColor","status","busy","componentId","newURL","disconnect","close","connect","newFont","Peer","roomID","Video","ref","tempRef","peer","stream","srcObject","playsInline","autoPlay","Webcam","peers","setPeers","userVideo","peersRef","tempWebcam","videoConstraints","window","innerHeight","innerWidth","navigator","mediaDevices","getUserMedia","video","audio","then","data","users","forEach","userID","userToSignal","callerID","initiator","trickle","signal","createPeer","peerID","incomingSignal","addPeer","find","p","webcamDiv","videoSt","muted","Window","handle","top","left","windowHeader","display","cursor","float","header","onReset","onClose","windowContent","background","undefined","footer","windowFooter","onInfo","windowInfo","InfoWindowContent","mainWrapper","backgroundImage","bgTeam","href","InfoWindow","RotaryCtrl","direction","enteredRotation","setEnteredRotation","onlineStatus","setOnlineStatus","rotation","setRotation","mounted","setMounted","tempRotaryCtrl","component","command","online","newStatus","control","absolute","bottom","linear","rotCW_Handler","Number","controlId","val","rotaryCtrl","min","max","CtrlLeft","disabled","CtrlRight","KM100","setFooter","lastChange","setLastChange","alertType","setAlertType","alert","setAlert","popupCtx","usePopUpContext","handleChangeFooter","newFooter","time","Date","getHours","getMinutes","getSeconds","getDay","getMonth","KM100_Background","difH","difMin","timeNow","difSec","toggleShowPopUp","rotationTop","rotationBottom","SM1ZP","SM1ZP_bg","SliderCtrl","sliderPos","setSliderPos","tempSlider","marks","parseInt","Box","Typography","gutterBottom","Stack","mb","alignItems","Slider","aria-label","defaultValue","valueLabelDisplay","step","onChangeCommitted","SwiitchCtrl","switchValue","setSwitchValue","FormGroup","start","Switch","checked","icon","inputProps","end","SelectCtrl","selectValue","setSelectValue","FormControl","fullWidth","InputLabel","Select","MenuItem","UpDownCtrl","handleCtrl","negativ","IconButton","LeftRightCtrl","Settings","settingCtrl","console","ThemeProvider","UpDown","LeftRight","Stream","tempWebcam2","uint8Arr","Uint8Array","binary","i","length","fromCharCode","base64String","btoa","img","Image","onload","canvas","getContext","drawImage","this","src","Canvas","SwitchOnOff","switchStatus","setSwitchStatus","tempSwitch","vertical-align","LaserCtrl","MichelsonInterferometer","zero","halfWidth","topHigh","topHighMiddle","topMiddle","leftLeft","leftMiddle","leftRight","leftMiddleRight","leftCam","componentList","selected","ExperimentUILayer","Fragment","toggleSelect","DescriptiveTag","Html","position","zIndexRange","description","Model","group","useGLTF","nodes","materials","dispose","args","scale","thickness","roughness","transmission","clearcoat","clearcoatRoughness","ior","envMapIntensity","attenuationColor","attenuationDistance","PI","onPointerDown","stopPropagation","castShadow","receiveShadow","geometry","SideMirrorMesh","material","BlackParts","transparent","opacity","SideMirrorMesh_1","ShinyParts","SideMirrorMesh_2","Mirror","TranslateMirrorMesh","TranslateMirrorMesh_1","TranslateMirrorMesh_2","PlaneMesh","PlaneMesh_1","BaseMesh","BaseMesh_1","LaserMesh","LaserMesh_1","SD5","LaserBeam","Laser","preload","VirtualLayer","colorManagement","softShadows","camera","fov","fallback","Environment","files","OrbitControls","ReactDOM","render","PopUpContext","PopUpContextProvider","showPopUp","setShowPopUp","text","setText","setType","errmsg","newText","newType","open","autoHideDuration","reason","popUp","severity"],"mappings":"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","file":"static/js/main.311592db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rotaryCtrl\":\"RotaryCtrl_rotaryCtrl__10MsD\",\"CtrlLeft\":\"RotaryCtrl_CtrlLeft__18bT3\",\"CtrlRight\":\"RotaryCtrl_CtrlRight__3ReKs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__1mAK5\",\"navMenu\":\"NavBar_navMenu__39ykl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1DZpm\",\"popupWindow\":\"Login_popupWindow__2XsJg\",\"popupInner\":\"Login_popupInner__1U9Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UpDown\":\"Settings_UpDown__3LajU\",\"LeftRight\":\"Settings_LeftRight__2IVau\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Canvas\":\"Stream_Canvas__pCA10\",\"Settings\":\"Stream_Settings__2Zsif\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"webcamDiv\":\"Webcam_webcamDiv__1zu7H\"};","import NavBar from \"./components/UI/NavBar\";\r\nimport Console from \"./components/Console/Console\";\r\nimport Chat from \"./components/Chat/Chat\";\r\nimport Login from \"./components/Login/Login\";\r\nimport VirtualLayer from \"./components/UI/VirtualLayer\";\r\nimport { SocketContextProvider } from \"./services/SocketContext\";\r\nimport { AppContextProvider } from \"./services/AppContext\";\r\nimport ExperimentUILayer from \"./components/UI/ExperimentUILayer\";\r\nimport Cam from \"./components/Chat/Webcam\";\r\nimport {PopUpContextProvider} from \"./services/PopUpContext\"\r\n//import { WebView } from 'react-native-webview';\r\n\r\nconst App = () => {\r\n  process.title = 'XRTLApp';\r\n  return (\r\n    <AppContextProvider>\r\n      <SocketContextProvider>\r\n          <VirtualLayer />\r\n        <PopUpContextProvider>\r\n          <ExperimentUILayer />\r\n          <Console />\r\n          <Chat />\r\n          <Cam />\r\n          <NavBar />\r\n          <Login />\r\n        </PopUpContextProvider>\r\n      </SocketContextProvider>\r\n    </AppContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;","\r\nimport styles from \"./NavBar.module.css\"\r\nimport { GiLaserWarning } from \"react-icons/gi\"\r\nimport { ImConnection } from \"react-icons/im\"\r\nimport { BsBox } from \"react-icons/bs\"\r\nimport { FaTags } from \"react-icons/fa\"\r\nimport { MdOutlineScreenRotation, MdInfoOutline } from \"react-icons/md\"\r\nimport { useSocketContext } from '../../services/SocketContext'\r\nimport { useAppContext } from '../../services/AppContext'\r\nimport { BsCamera } from 'react-icons/bs'\r\nconst NavBar = () => {\r\n\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    let connectionStatusColor = \"\"\r\n    if (socketCtx.connected) { connectionStatusColor = \"white\" }\r\n    let autoRotateColor = \"\"\r\n    if (appCtx.autoRotate) { autoRotateColor = \"white\" }\r\n    let showTagsColor = \"\"\r\n    if (appCtx.showTags) { showTagsColor = \"white\" }\r\n    let cameraStatusColor = \"\";\r\n    if (appCtx.showWebcam) { cameraStatusColor = \"white\" }\r\n    let showBeamColor = \"\";\r\n    if (appCtx.showBeam) { showBeamColor = \"white\" }\r\n    let showInfoWindowColor = \"\";\r\n    if (appCtx.showInfoWindow) { showInfoWindowColor = \"white\" }\r\n\r\n    return <div id=\"navbar\" className={styles.navbar} >\r\n        <h1>XR TwinLab</h1>\r\n        <div className={styles.navMenu}>\r\n            <ul>\r\n                <li onClick={() => { (socketCtx.connected) ? socketCtx.toggleConnection() : appCtx.toggleLogin(); }}><ImConnection size={29}\r\n                    color={connectionStatusColor} /></li>\r\n                <li onClick={appCtx.toggleShowVirtualLayer}><BsBox size={26} /></li>\r\n                <li onClick={appCtx.toggleShowBeam}><GiLaserWarning size={29} color={showBeamColor} /></li>\r\n\r\n                <li onClick={appCtx.toggleAutoRotate}><MdOutlineScreenRotation size={26} color={autoRotateColor} /></li>\r\n                <li onClick={appCtx.toggleShowTags}><FaTags size={25} color={showTagsColor} /></li>\r\n\r\n                <li onClick={appCtx.toggleShowWebcam}><BsCamera size={26}\r\n                    color={cameraStatusColor} /></li>\r\n\r\n                <li onClick={appCtx.toggleShowInfoWindow}><MdInfoOutline size={26} color={showInfoWindowColor} /></li>\r\n\r\n            </ul>\r\n        </div>\r\n    </div>\r\n}\r\nexport default NavBar","import { useState } from \"react\"\r\n// import { socket } from \"../../services/SocketContext\"\r\nimport { RiTerminalBoxFill } from \"react-icons/ri\"\r\nimport styles from \"./Console.module.css\"\r\nimport { useAppContext } from \"../../services/AppContext\"\r\n\r\nconst Console = (props) => {\r\n  const [showConsole, setShowConsole] = useState(false)\r\n  const [animation, setAnimation] = useState(\"\")\r\n  const appCtx = useAppContext();\r\n\r\n  const showConsoleHandler = () => {\r\n    setAnimation(showConsole ? styles.closeConsole : styles.openConsole)\r\n    setShowConsole(!showConsole)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.consoleContainer + \" \" + animation}>\r\n      <div className={styles.consoleMain}>\r\n        {appCtx.logs.map((payload, index) => {\r\n          return (<span key={index}>{payload}<br /></span>)\r\n        })}\r\n      </div>\r\n      <div className={styles.consoleHandler}><span>\r\n        <RiTerminalBoxFill size={35} onClick={showConsoleHandler} />\r\n      </span></div>\r\n    </div>\r\n  )\r\n}\r\nexport default Console\r\n","import { useEffect, useState, useRef } from \"react\"\r\nimport styles from \"./Chat.module.css\"\r\nimport { ImBubble } from \"react-icons/im\"\r\nimport { MdSend } from \"react-icons/md\"\r\nimport { useSocketContext } from \"../../services/SocketContext\";\r\n\r\nconst Chat = (props) => {\r\n  const [message, setMessage] = useState(\"\")\r\n  const [showChat, setShowChat] = useState(false)\r\n  const [animation, setAnimation] = useState(\"\")\r\n  const [chat, setChat] = useState([]);\r\n  const socketCtx = useSocketContext();\r\n  const tempChat = useRef();\r\n\r\n  const ChatEmit = () => {\r\n    socketCtx.socket.on(\"message\", (payload) => {\r\n      setChat([...chat, payload])\r\n    })\r\n  }\r\n\r\n  tempChat.current = ChatEmit;\r\n\r\n  useEffect(() => {\r\n    tempChat.current();\r\n  }, [socketCtx, chat])\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    socketCtx.socket.emit(\"message\", { userId: socketCtx.username, message, color: socketCtx.fontColor });\r\n    setMessage(\"\");\r\n  }\r\n\r\n  const showChatHandler = () => {\r\n    setAnimation(showChat ? styles.closeChat : styles.openChat)\r\n    setShowChat(!showChat)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={styles.chatContainer + \" \" + animation}\r\n    >\r\n      <div className={styles.chatMain}>\r\n        {chat.map((payload, index) => {\r\n          return (\r\n            <b key={index} >\r\n              <span style={{ color: payload.color }}> {payload.userId}:</span> <span >{payload.message}</span>\r\n              <br />\r\n            </b>\r\n          )\r\n        })}\r\n      </div>\r\n      <form className={styles.msgForm} onSubmit={sendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"message\"\r\n          placeholder=\"Type Message here\"\r\n          value={message}\r\n          onChange={(e) => {\r\n            setMessage(e.target.value)\r\n          }}\r\n          required\r\n        />\r\n        <button type=\"submit\"><MdSend size={25} /></button>\r\n      </form>\r\n      <div className={styles.chatHandler + \" \" + animation}>\r\n        <span>\r\n          <ImBubble size={35} onClick={showChatHandler} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Chat\r\n","import { useSocketContext } from '../../services/SocketContext'\r\nimport React, { useState } from \"react\";\r\nimport styles from \"./Login.module.css\"\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport { Grid, Autocomplete, Box, TextField, createTheme, ThemeProvider, Button, IconButton } from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport FormatColorTextIcon from '@mui/icons-material/FormatColorText';\r\nimport { createFilterOptions } from '@mui/material/Autocomplete';\r\n\r\nconst Login = (props) => {\r\n    var col = ['IndianRed', 'FireBrick', 'MediumVioletRed', 'HotPink', 'Coral', 'DarkOrange', 'Yellow',\r\n        'Khaki', 'Plum', 'DarkOrchid', 'ForestGreen', 'DarkOliveGreen', 'LightGreen', 'Teal', 'Aqua', 'Blue', 'LightSkyBlue']\r\n    const [username, setUsername] = useState(\"\");\r\n    const [fontColor, setfontColor] = useState(\"white\");\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n    const [connection, setConnection] = useState(null);\r\n    const filter = createFilterOptions();\r\n    const connectionOption = [{ title: 'http://localhost:7000' }, { title: 'http://192.168.1.42:7000' }, { title: 'http://10.232.37.40:7000' }]\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#fff',\r\n            },\r\n        },\r\n        spacing: 2,\r\n    })\r\n\r\n    const handleLogin = () => {\r\n        if (username !== \"\") {\r\n            try {\r\n                socketCtx.setNewURL(String(connection.title), String(username));\r\n                socketCtx.toggleConnection(String(username));\r\n                appCtx.setShowLogin(false)\r\n            }\r\n            catch (error) { }\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setUsername(event.target.value);\r\n    };\r\n\r\n    const autoCompleteHandle = (event, newValue) => {\r\n        if (typeof newValue === 'string') {\r\n            setConnection({ title: newValue, });\r\n        } else if (newValue && newValue.inputValue) {\r\n            setConnection({ title: newValue.inputValue, });\r\n        } else {\r\n            setConnection(newValue);\r\n        }\r\n    }\r\n\r\n    const filterOption = (options, params) => {\r\n        const filtered = filter(options, params);\r\n        const { inputValue } = params;\r\n        const isExisting = options.some((option) => inputValue === option.title);\r\n        if (inputValue !== '' && !isExisting) {\r\n            filtered.push({ inputValue, title: `Add \"${inputValue}\"`, });\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n    const getLabel = (option) => {\r\n        if (typeof option === 'string') {\r\n            return option;\r\n        }\r\n        if (option.inputValue) {\r\n            return option.inputValue;\r\n        }\r\n        return option.title;\r\n    }\r\n\r\n    if (appCtx.showLogin) {\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <div className={styles.popupWindow}>\r\n                </div>\r\n                <div className={styles.popupInner} >\r\n                    <h3 title=\"settings\">Settings</h3>\r\n                    <Grid container columnSpacing={{ md: 95 }}>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                autoFocus\r\n                                variant=\"outlined\"\r\n                                label=\"Username \"\r\n                                value={username}\r\n                                onChange={handleChange}\r\n                                onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                                style={{ marginLeft: 17, width: 250 }}\r\n                                error={username === \"\"}\r\n                                helperText={username === \"\" ? 'Please enter your username!' : ' '}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            < IconButton onClick={(e) => {\r\n                                col = col[Math.floor(Math.random() * 16)]\r\n                                document.getElementById(\"colorIcon\").style.color = col\r\n                                setfontColor(col);\r\n                                socketCtx.setNewFont(col);\r\n                            }} >\r\n                                <FormatColorTextIcon id=\"colorIcon\" color={fontColor} fontSize=\"large\" />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box sx={{ m: 8, width: 250 }} >\r\n                        <Autocomplete\r\n                            value={connection}\r\n                            freeSolo\r\n                            renderInput={(params) => (\r\n                                <TextField {...params} label=\"Choose server address \" />)}\r\n                            onChange={autoCompleteHandle}\r\n                            onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                            filterOptions={filterOption}\r\n                            selectOnFocus\r\n                            clearOnBlur\r\n                            handleHomeEndKeys\r\n                            options={connectionOption}\r\n                            getOptionLabel={getLabel}\r\n                            renderOption={(props, option) => <li {...props}>{option.title}</li>}\r\n                        />\r\n                    </Box>\r\n\r\n                    <Button size=\"small\" type=\"submit\" variant=\"contained\"\r\n                        onClick={handleLogin}\r\n                        endIcon={<SendIcon />}\r\n                        style={{ width: 90, height: 30, marginTop: -3, marginLeft: 270 }}\r\n                    >Login</Button>\r\n\r\n                </div >\r\n            </ThemeProvider>\r\n        );\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default Login;","import React, { useState, useContext } from \"react\";\r\n\r\nconst AppContext = React.createContext()\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}\r\n\r\nexport function AppContextProvider({ children }) {\r\n  const [autoRotate, setAutoRotate] = useState(true);\r\n  const [showVirtualLayer, setShowVirtualLayer] = useState(true);\r\n  const [showWebcam, setShowWebcam] = useState(false);\r\n  const [selectedComps, setSelectedComps] = useState(new Set());\r\n  const [busyComps, setBusyComps] = useState(new Set());\r\n  const [logs, setLogs] = useState([]);\r\n  const [showTags, setShowTags] = useState(true);\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [showInfoWindow, setShowInfoWindow] = useState(false);\r\n  const [showBeam, setShowBeam] = useState(false);\r\n\r\n\r\n  const toggleSelectedComp = compId => {\r\n    if (!selectedComps.has(compId)) {\r\n      setSelectedComps(prev => new Set(prev.add(compId)))\r\n    } else {\r\n      setSelectedComps(prev => new Set([...prev].filter(x => x !== compId)))\r\n    }\r\n  };\r\n\r\n  const addBusyComp = compId => {\r\n    if (!busyComps.has(compId)) {\r\n      setBusyComps(prev => new Set(prev.add(compId)))\r\n    }\r\n  };\r\n\r\n  const removeBusyComp = compId => {\r\n    if (busyComps.has(compId)) {\r\n      setBusyComps(prev => new Set([...prev].filter(x => x !== compId)))\r\n    }\r\n  };\r\n\r\n  const toggleAutoRotate = () => {\r\n    setAutoRotate(!autoRotate);\r\n  };\r\n\r\n  const toggleShowVirtualLayer = () => {\r\n    setShowVirtualLayer(!showVirtualLayer);\r\n  };\r\n  const toggleShowTags = () => {\r\n    setShowTags(!showTags)\r\n  }\r\n\r\n  const addLog = (log) => {\r\n    setLogs(prev => [log, ...prev])\r\n  };\r\n\r\n  const toggleShowWebcam = () => {\r\n    setShowWebcam(!showWebcam);\r\n  };\r\n\r\n  const toggleShowBeam = () => {\r\n    setShowBeam(!showBeam);\r\n  }\r\n\r\n  const toggleShowInfoWindow = () => {\r\n    setShowInfoWindow(!showInfoWindow);\r\n  }\r\n\r\n  const toggleLogin = () => {\r\n    setShowLogin(!showLogin);\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        autoRotate,\r\n        toggleAutoRotate,\r\n        showVirtualLayer,\r\n        toggleShowVirtualLayer,\r\n        selectedComps,\r\n        toggleSelectedComp,\r\n        logs,\r\n        addLog,\r\n        busyComps,\r\n        addBusyComp,\r\n        removeBusyComp,\r\n        showTags,\r\n        toggleShowTags,\r\n        showWebcam,\r\n        toggleShowWebcam,\r\n        showBeam,\r\n        toggleShowBeam,\r\n        showLogin,\r\n        setShowLogin,\r\n        showInfoWindow,\r\n        toggleShowInfoWindow,\r\n        toggleLogin\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"InfoWindowContent_mainWrapper__345Fv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popUp\":\"PopUp_popUp__IolRq\"};","import { useState, useContext, useEffect, createContext } from \"react\";\r\nimport { useAppContext } from \"./AppContext\";\r\nimport { Manager } from \"socket.io-client\";\r\n\r\nvar manager = new Manager(\"\", { autoConnect: false });\r\nvar socket = manager.socket(\"/\");\r\nvar SocketContext = createContext();\r\nvar jwt = require('jsonwebtoken');\r\n\r\nexport function useSocketContext() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketContextProvider({ children }) {\r\n  const [connected, setConnected] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [URL, setURL] = useState('');\r\n  const [fontColor, setFontColor] = useState('white');\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    socket.on('connect', (e) => {\r\n      setConnected(true)\r\n      appCtx.addLog(\"Server : Client connected to \" + URL)\r\n    });\r\n\r\n    socket.on('disconnect', (e) => {\r\n      setConnected(false)\r\n      appCtx.addLog(\"Server : Client disconnect.\")\r\n    })\r\n    socket.on('status', payload => {\r\n      if (payload.status.busy) { appCtx.addBusyComp(payload.componentId) } else {\r\n        appCtx.removeBusyComp(payload.componentId)\r\n      }\r\n    })\r\n  })\r\n\r\n  const setNewURL = (newURL, username) => {\r\n    socket.disconnect();\r\n    manager = new Manager(newURL, { autoConnect: false});\r\n    socket = manager.socket(\"/\");\r\n    SocketContext = createContext();\r\n    setURL(newURL);\r\n    setUsername(username);\r\n  }\r\n\r\n  const setNewFont = (newFont) => {\r\n    setFontColor(newFont);\r\n  }\r\n\r\n  const toggleConnection = (username) => {\r\n    if (!connected) {\r\n    /*  var payload = {\r\n        sub: username,\r\n        component: 'client',\r\n        iat: Date.now(),\r\n        exp: Date.now() + 3600000,\r\n      }\r\n\r\n      var token = jwt.sign(payload, \"keysecret\");\r\n      socket.auth = { token: token }*/\r\n      socket.connect();\r\n\r\n      setConnected(true)\r\n      appCtx.addLog(\"Client connected by choice.\")\r\n    } else {\r\n      setConnected(false)\r\n      setUsername(\"\");\r\n      setNewURL(\"\");\r\n      socket.close();\r\n      appCtx.addLog(\"Client disconnected by choice.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SocketContext.Provider value={{ socket, connected, toggleConnection, setNewURL, setNewFont, username, fontColor }}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n","import { useSocketContext } from '../../services/SocketContext'\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport styles from \"./Webcam.module.css\";\r\nvar Peer = require('simple-peer');\r\nvar roomID = '';\r\n\r\nconst Video = (props) => {\r\n    const ref = useRef();\r\n    const tempRef = useRef();\r\n\r\n    const peerStream = () => {\r\n        props.peer.on(\"stream\", stream => {\r\n            ref.current.srcObject = stream;\r\n        })\r\n    }\r\n\r\n    tempRef.current = peerStream;\r\n\r\n    useEffect(() => {\r\n        tempRef.current();\r\n    }, []);\r\n\r\n    return (\r\n        <video playsInline autoPlay ref={ref} />\r\n    );\r\n}\r\n\r\nconst Webcam = () => {\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n    const [peers, setPeers] = useState([]);\r\n    const userVideo = useRef();\r\n    const peersRef = useRef([]);\r\n    const tempWebcam = useRef();\r\n\r\n    const webcamEmit = () => {\r\n        const videoConstraints = {\r\n            height: window.innerHeight / 2,\r\n            width: window.innerWidth / 2\r\n        };\r\n\r\n        if (appCtx.showWebcam) {\r\n            navigator.mediaDevices.getUserMedia({ video: videoConstraints, audio: true }).then(stream => {\r\n                userVideo.current.srcObject = stream;\r\n                socketCtx.socket.emit('roomID', (data) => { //Transmission of the roomID\r\n                    roomID = data;\r\n                });\r\n\r\n                socketCtx.socket.emit('client join room', (roomID)); // new client will be added to the userList\r\n\r\n                socketCtx.socket.on('all users', users => {\r\n                    const peers = [];\r\n                    users.forEach(userID => {\r\n                        const peer = createPeer(userID, socketCtx.socket.id, stream);       // creates a peer for each client that is already in the room\r\n                        peersRef.current.push({\r\n                            peerID: userID,\r\n                            peer,\r\n                        })\r\n                        peers.push(peer);\r\n                    })\r\n                    setPeers(peers);\r\n                })\r\n\r\n                socketCtx.socket.on(\"user joined\", payload => {\r\n                    const peer = addPeer(payload.signal, payload.callerID, stream); //creates a new peer & adds it to the list for a freshly joining client\r\n                    peersRef.current.push({\r\n                        peerID: payload.callerID,\r\n                        peer,\r\n                    })\r\n\r\n                    setPeers(users => [...users, peer]);\r\n                });\r\n\r\n                socketCtx.socket.on(\"receiving returned signal\", payload => {\r\n                    const item = peersRef.current.find(p => p.peerID === payload.id);\r\n                    item.peer.signal(payload.signal);\r\n                });\r\n            })\r\n        }\r\n        function createPeer(userToSignal, callerID, stream) {       //Erstellen von peer für alle bisher Clienten die sich bisher im Raum schon befinden\r\n            const peer = new Peer({\r\n                initiator: true,        //wichtig, damit Stream in die gesendet werden kann\r\n                trickle: false,\r\n                stream,     //eigener Stream\r\n            });\r\n\r\n            peer.on(\"signal\", signal => {\r\n                socketCtx.socket.emit(\"sending signal\", ({ userToSignal, callerID, signal }));\r\n            })\r\n            return peer;\r\n        }\r\n\r\n        function addPeer(incomingSignal, callerID, stream) {        //creates peers for all following joining clients\r\n            const peer = new Peer({\r\n                initiator: false,\r\n                trickle: false,\r\n                stream,\r\n            });\r\n\r\n            peer.on(\"signal\", signal => {\r\n                socketCtx.socket.emit(\"returning signal\", { signal, callerID });\r\n            });\r\n            peer.signal(incomingSignal);\r\n            return peer;\r\n        }\r\n    }\r\n\r\n    tempWebcam.current = webcamEmit;\r\n\r\n    useEffect(() => {\r\n        tempWebcam.current();\r\n    }, [appCtx.showWebcam])\r\n\r\n    if (appCtx.showWebcam) {\r\n        return (\r\n            <div className={styles.webcamDiv}>\r\n                <video className={styles.videoSt} muted ref={userVideo} autoPlay playsInline />\r\n                {peers.map((peer, index) => {           //wenn man diese Schleife weglässt, dann wird nur der eigene Stream dargestellt\r\n                    return (\r\n                        <Video key={index} peer={peer} />\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return <></>;\r\n    }\r\n};\r\n\r\nexport default Webcam;","import Draggable from \"react-draggable\"\r\nimport styles from \"./Window.module.css\"\r\nimport { CgCloseO } from \"react-icons/cg\"\r\nimport { IoReloadOutline, IoInformationCircleOutline } from \"react-icons/io5\"\r\n\r\nconst Window = (props) => {\r\n  return (\r\n    <Draggable handle=\".draggableHandler\">\r\n      <div\r\n        className={styles.window}\r\n        style={{ top: props.top + \"px\", left: props.left + \"px\" }}\r\n      >\r\n        <div className={styles.windowHeader}>\r\n          <span\r\n            className=\"draggableHandler\" //FIXME draggable doesnt seem to work with inline JSX classes. \r\n            style={{\r\n              display: 'block',\r\n              width: \"calc(100% - 50px)\",\r\n              cursor: \"move\",\r\n              float: \"left\"\r\n            }}\r\n          >\r\n            {props.header}\r\n          </span>\r\n          <span onClick={props.onReset} > <IoReloadOutline size={20} />        </span>\r\n          <span onClick={props.onClose}><CgCloseO size={20} /></span>\r\n        </div>\r\n        <div\r\n          className={styles.windowContent}\r\n          style={{\r\n            height: props.height,\r\n            width: props.width,\r\n            background: \"url(\" + props.background + \")\",\r\n          }}\r\n        >\r\n          {props.children}\r\n        </div>\r\n        {props.footer !== undefined && (\r\n          <div className={styles.windowFooter}>\r\n            <span onClick={props.onInfo}> <IoInformationCircleOutline size={25} /></span>\r\n            <label>{props.footer}</label>\r\n          </div>\r\n        )}\r\n        <div className={styles.windowInfo}>\r\n\r\n        </div>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n}\r\nexport default Window\r\n","export default __webpack_public_path__ + \"static/media/xrtl_team.519a843e.png\";","import styles from \"./InfoWindowContent.module.css\"\r\nimport bgTeam from \"../media/images/xrtl_team.png\"\r\n\r\nconst InfoWindowContent = (props) => {\r\n\r\n  return(\r\n    <div className={styles.mainWrapper}\r\n      style={{backgroundImage: \"url(\\\"\"+bgTeam+\"\\\")\"}}\r\n    > \r\n      Remote labs are a trendsetting way of teaching, communicating, and experiencing science as well as enabling collaborative work. Unfortunately, the implementation of remote access involves a cost-intensive development or at least requires a certain technical skillset. To establish remote labs across disciplines, especially outside the field of IT and engineering, the technical access threshold must be low enough to support a self-contained implementation by researchers, assistants, and technical staff. Hereby, we are developing the open-source toolbox XR Twin Lab for the research field of Photonics. XR Twin Lab (XRTL) provides a modular way of building a web-based application to control optical experimental setups with the integration of VR and AR endpoints.\r\n      <p>\r\n        This Project is currently developed within the DAAD-funded project \"digiPhoton\" and BMBF-funded project \"Lichtwerkstatt\" at the Abbe School of Photonics / Institute of Applied Physics / Friedrich Schiller University in Jena. Feel free to follow our <a href=\"https://github.com/Lichtwerkstatt/XRTL_SPA\">Git Repo</a> or <a href=\"mailto:team@lichtwerkstatt-jena.de\">Contact us.</a>\r\n      </p>\r\n      <p>\r\n        Best! Clara, Falko, Jari and Johannes\r\n      </p>\r\n      \r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default InfoWindowContent;","import { useAppContext } from \"../../services/AppContext\";\r\nimport Window from \"../UI/Window\";\r\nimport InfoWindowContent from \"./InfoWindowContent\";\r\n\r\nconst InfoWindow = (props) => {\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleShowInfoWindow();\r\n  };\r\n\r\n  return (\r\n    <Window\r\n      header=\"About XR TwinLab\"\r\n      top=\"250\"\r\n      left=\"200\"\r\n      \r\n      width=\"600px\"\r\n      onClose={handleCloseWindow}\r\n    >\r\n      <InfoWindowContent />\r\n    </Window>\r\n  );\r\n};\r\nexport default InfoWindow;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport styles from \"./RotaryCtrl.module.css\";\r\nimport { MdOutlineRotateRight, MdOutlineRotateLeft } from \"react-icons/md\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport { useSocketContext } from \"../../services/SocketContext\"\r\n\r\nconst RotaryCtrl = (props) => {\r\n  const [enteredRotation, setEnteredRotation] = useState(0);\r\n  const [onlineStatus, setOnlineStatus] = useState('');\r\n  const [rotation, setRotation] = useState(0);\r\n  var [mounted, setMounted] = useState(true);\r\n  var direction;\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n  const tempRotaryCtrl = useRef();\r\n\r\n\r\n  const rotaryCtrlEmit = () => {\r\n    if (!mounted) {\r\n      mounted = true\r\n      setMounted(true)\r\n      socketCtx.socket.emit(\"command\", {\r\n        userId: socketCtx.username,\r\n        componentId: props.component,\r\n        command: \"getStatus\"\r\n      })\r\n      socketCtx.socket.emit('getFooter', props.component)\r\n\r\n      socketCtx.socket.on('getFooter', payload => {\r\n        if (payload.componentId === props.component) {\r\n          setOnlineStatus(payload.online)\r\n          props.newStatus(String(payload.status))\r\n        }\r\n      })\r\n\r\n      socketCtx.socket.on(\"status\", payload => {\r\n        if (payload.componentId === props.component) {\r\n          if (props.control === \"top\") {\r\n            setRotation(payload.status.top.absolute)\r\n          } else if (props.control === \"bottom\") {\r\n            setRotation(payload.status.bottom.absolute)\r\n          } else {\r\n            setRotation(payload.status.linear.absolute)\r\n          }\r\n        }\r\n      });\r\n\r\n      socketCtx.socket.on('footer', payload => {\r\n        if (payload.componentId === props.component) {\r\n          props.newStatus(String(payload.status))\r\n        }\r\n      })\r\n      mounted = false;\r\n      setMounted(false);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n      setMounted(false);\r\n    }\r\n  }\r\n  tempRotaryCtrl.current = rotaryCtrlEmit;\r\n\r\n  useEffect(() => {\r\n    tempRotaryCtrl.current();\r\n  }, [socketCtx.socket]);\r\n\r\n  const rotCW_Handler = name => (event) => {\r\n    event.preventDefault();\r\n\r\n    direction = 0\r\n    if (name === \"left\") {\r\n      direction = -1 * Number(enteredRotation)\r\n    } else if (name === \"right\") {\r\n      direction = Number(enteredRotation)\r\n    }\r\n    if (direction !== 0) {\r\n      socketCtx.socket.emit(\"command\", {\r\n        userId: socketCtx.username,\r\n        componentId: props.component,\r\n        command: {\r\n          controlId: props.control,\r\n          val: direction\r\n        }\r\n      })\r\n\r\n      socketCtx.socket.emit(\"footer\", {\r\n        status: \"Last change by: \" + socketCtx.username,\r\n        componentId: props.component\r\n      })\r\n    }\r\n    appCtx.addLog(\"User initiated CW rotation on \" + props.component + \" / \" + props.control + \" by \" + enteredRotation + \" steps.\")\r\n  };\r\n\r\n  const changeRotationHandler = (event) => {\r\n    setEnteredRotation(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={styles.rotaryCtrl} style={{ top: props.top + \"px\", left: props.left + \"px\" }}>\r\n      <div className={styles.rotaryCtrl}>\r\n        <span>{Number(rotation)}</span>\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"100\"\r\n          value={enteredRotation}\r\n          onChange={changeRotationHandler}\r\n        />\r\n      </div>\r\n      <button onClick={rotCW_Handler(\"left\")} className={styles.CtrlLeft} disabled={(socketCtx.connected && !appCtx.busyComps.has(props.component) && onlineStatus) ? false : true}  >\r\n        <MdOutlineRotateLeft size={28} />\r\n      </button>\r\n      <button onClick={rotCW_Handler(\"right\")} className={styles.CtrlRight} disabled={(socketCtx.connected && !appCtx.busyComps.has(props.component) && onlineStatus) ? false : true}>\r\n        <MdOutlineRotateRight size={28} />\r\n      </button>\r\n    </form >\r\n  );\r\n};\r\nexport default RotaryCtrl;","export default __webpack_public_path__ + \"static/media/km100_outline.5cffd463.png\";","import { useState } from \"react\";\r\nimport RotaryCtrl from \"../UI/RotaryCtrl\";\r\nimport Window from \"../UI/Window\";\r\nimport KM100_Background from \"./media/km100_outline.png\"\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport { usePopUpContext } from \"../../services/PopUpContext\"\r\nimport { useSocketContext } from \"../../services/SocketContext\"\r\n\r\nconst KM100 = (props) => {\r\n  const [footer, setFooter] = useState(props.footer);\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  var [alert, setAlert] = useState(false);\r\n  var [mounted, setMounted] = useState(true);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n  }\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      componentId: props.id,\r\n      command: \"reset\"\r\n    })\r\n  }\r\n\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    if (!mounted) {\r\n      mounted = true\r\n      setMounted(true)\r\n      var time = new Date();\r\n      setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      setFooter(newFooter);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n      setMounted(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Window\r\n      header={props.title + \" (\" + props.id + \")\"}\r\n      footer={footer}\r\n      top={props.top}\r\n      left={props.left}\r\n      height=\"240px\"\r\n      width=\"250px\"\r\n      background={KM100_Background}\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.id}\r\n        control=\"top\"\r\n        newStatus={handleChangeFooter}\r\n        footer={footer}\r\n        top=\"20\"\r\n        left=\"160\"\r\n      />\r\n      <RotaryCtrl\r\n        rotation={props.rotationBottom}\r\n        component={props.id}\r\n        control=\"bottom\"\r\n        newStatus={handleChangeFooter}\r\n        footer={footer}\r\n        top=\"50\"\r\n        left=\"160\"\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default KM100;\r\n","export default __webpack_public_path__ + \"static/media/linear_outline.7ac97702.png\";","import { useState } from \"react\";\r\nimport RotaryCtrl from \"../UI/RotaryCtrl\";\r\nimport Window from \"../UI/Window\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport SM1ZP_bg from \"./media/linear_outline.png\";\r\nimport { useSocketContext } from \"../../services/SocketContext\";\r\nimport { usePopUpContext } from \"../../services/PopUpContext\"\r\n\r\nconst SM1ZP = (props) => {\r\n  const [footer, setFooter] = useState(props.footer);\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  var [alert, setAlert] = useState(false);\r\n  var [mounted, setMounted] = useState(true);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    if (!mounted) {\r\n      mounted = true\r\n      setMounted(true)\r\n      var time = new Date();\r\n      setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      setFooter(newFooter);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n      setMounted(false);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      componentId: props.id,\r\n      command: \"reset\"\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n\r\n  }\r\n\r\n  return (\r\n    <Window\r\n      header={props.title + \" (\" + props.id + \")\"}\r\n      top={props.top}\r\n      left={props.left}\r\n      width=\"250px\"\r\n      height=\"235px\"\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      background={SM1ZP_bg}\r\n      newStatus={handleChangeFooter}\r\n      footer={footer}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotation}\r\n        component={props.id}\r\n        newStatus={handleChangeFooter}\r\n        footer={footer}\r\n        control=\"linear\"\r\n        top=\"35\"\r\n        left=\"160\"\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default SM1ZP;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport { useSocketContext } from \"../../services/SocketContext\";\r\nimport { Box, Stack, Typography, Slider } from \"@mui/material\";\r\n\r\nconst SliderCtrl = (props) => {\r\n  const [sliderPos, setSliderPos] = useState(props.sliderPos);\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n  const tempSlider = useRef();\r\n\r\n  const marks = [\r\n    { value: parseInt(props.min), label: props.min, },\r\n    { value: 0, label: '0', },\r\n    { value: parseInt(props.max), label: props.max, },\r\n  ]\r\n\r\n  const sliderEmit = () => {\r\n    socketCtx.socket.on(\"status\", payload => {\r\n      if (payload.component === props.component) {\r\n        setSliderPos(payload.status[props.control]);\r\n      }\r\n    })\r\n  }\r\n  tempSlider.current = sliderEmit;\r\n\r\n  useEffect(() => {\r\n    tempSlider.current();\r\n  }, [socketCtx.socket])\r\n\r\n  const handleSettingChanges = (event, newValue) => {\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      componentId: props.component,\r\n      command: {\r\n        controlId: props.command,\r\n        val: newValue\r\n      }\r\n    })\r\n\r\n    socketCtx.socket.emit(\"footer\", {\r\n      status: \"Last change by: \" + socketCtx.username,\r\n      componentId: props.component\r\n    })\r\n\r\n    appCtx.addLog(\"User set position on \" + props.component + \" to \" + sliderPos)\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ width: 250, m: 2 }}>\r\n      <Typography id=\"input-slider\" gutterBottom>\r\n        {props.title}\r\n      </Typography>\r\n      <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n        <Slider aria-label=\"Temperature\"\r\n          id=\"brightnessSlider\"\r\n          defaultValue={0}\r\n          valueLabelDisplay=\"auto\"\r\n          step={1}\r\n          min={-2}\r\n          max={2}\r\n          value={sliderPos}\r\n          onChangeCommitted={handleSettingChanges}\r\n          marks={marks}\r\n          disabled={(socketCtx.connected && !appCtx.busyComps.has(props.component) && props.online) ? false : true}\r\n        />\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default SliderCtrl;","import { useState, useEffect, useRef } from \"react\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport { useSocketContext } from \"../../services/SocketContext\";\r\nimport { Switch, Box, Typography, FormGroup, Stack } from '@mui/material';\r\n\r\nconst SwiitchCtrl = (props) => {\r\n    const [switchValue, setSwitchValue] = useState(false);\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n    const tempSlider = useRef();\r\n\r\n    const sliderEmit = () => {\r\n        socketCtx.socket.on(\"status\", payload => {\r\n            if (payload.component === props.component) {\r\n                setSwitchValue(payload.status[props.control]);\r\n            }\r\n        })\r\n    }\r\n    tempSlider.current = sliderEmit;\r\n\r\n    useEffect(() => {\r\n        tempSlider.current();\r\n    }, [socketCtx.socket])\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSwitchValue(newValue);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            componentId: props.component,\r\n            command: {\r\n                controlId: props.command,\r\n                val: newValue\r\n            }\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            componentId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set switch on \" + props.component + \" to \" + switchValue)\r\n\r\n        try {\r\n            props.icon.style.color = (switchValue === true) ? 'grey' : 'white';\r\n        } catch (error) { }\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: 250, m: 2 }}>\r\n            <FormGroup>\r\n                <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                    <Typography>{props.start}</Typography>\r\n                    <Switch checked={switchValue}\r\n                        onChange={handleSettingChanges}\r\n                        inputProps={{ 'aria-label': 'controlled' }}\r\n                        disabled={(socketCtx.connected && !appCtx.busyComps.has(props.component) && props.online) ? false : true} />\r\n                    <Typography>{props.end}</Typography>\r\n                </Stack>\r\n            </FormGroup>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SwiitchCtrl;\r\n","import { useState } from \"react\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport { useSocketContext } from \"../../services/SocketContext\";\r\nimport { MenuItem, Select, FormControl, InputLabel, Box } from '@mui/material';\r\n\r\nconst SelectCtrl = (props) => {\r\n    const [selectValue, setSelectValue] = useState('');\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSelectValue(newValue.props.value);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            componentId: props.component,\r\n            command: {\r\n                controlId: props.command,\r\n                val: newValue.props.value\r\n            }\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            componentId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set switch on \" + props.component + \" to \" + selectValue)\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ m: 2, width: 250 }}>\r\n            <FormControl fullWidth>\r\n                <InputLabel >Resolution</InputLabel>\r\n                <Select\r\n                    value={selectValue}\r\n                    label={props.title}\r\n                    onChange={handleSettingChanges}\r\n                    disabled={(socketCtx.connected && !appCtx.busyComps.has(props.component) && props.online) ? false : true}\r\n                >\r\n                    <MenuItem value={'UXGA'}>UXGA (1600x1200)</MenuItem>\r\n                    <MenuItem value={'SXGA'}>SXGA (1280x1024)</MenuItem>\r\n                    <MenuItem value={'XGA'}>XGA (1024x768)</MenuItem>\r\n                    <MenuItem value={'SVGA'}>SVGA (800x600)</MenuItem>\r\n                    <MenuItem value={'VGA'}>VGA (640x480)</MenuItem>\r\n                    <MenuItem value={'QVGA'}>QVGA (320x240)</MenuItem>\r\n                    <MenuItem value={'CIF'}>CIF (352x288)</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </Box>\r\n    )\r\n\r\n}\r\nexport default SelectCtrl;","import { useSocketContext } from \"../../services/SocketContext\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport Stack from '@mui/material/Stack';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Up from '@mui/icons-material/ArrowCircleUpOutlined';\r\nimport Down from '@mui/icons-material/ArrowCircleDownOutlined';\r\n\r\nconst UpDownCtrl = (props) => {\r\n  const socketCtx = useSocketContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCtrl = (direction, negativ) => (event) => {\r\n    event.preventDefault();\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      componentId: props.component,\r\n      command: {\r\n        controlId: direction,\r\n        val: negativ ? 15 : -15\r\n      }\r\n    })\r\n\r\n    socketCtx.socket.emit(\"footer\", {\r\n      status: \"Last change by: \" + socketCtx.username,\r\n      componentId: props.component\r\n    })\r\n\r\n    appCtx.addLog(\"User changed the position on \" + props.component)\r\n  }\r\n\r\n  return (\r\n    <Stack >\r\n      <IconButton onClick={handleCtrl(\"virtualTilt\", true)} disabled={(socketCtx.connected && !appCtx.busyComps.has(props.component) && props.online) ? false : true} >\r\n        <Up />\r\n      </IconButton>\r\n      <IconButton onClick={handleCtrl(\"virtualTilt\", false)} disabled={(socketCtx.connected && !appCtx.busyComps.has(props.component) && props.online) ? false : true}  >\r\n        <Down />\r\n      </IconButton>\r\n    </Stack>\r\n  )\r\n}\r\nexport default UpDownCtrl;","import { useSocketContext } from \"../../services/SocketContext\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Box from '@mui/material/Box';\r\nimport Left from '@mui/icons-material/ArrowCircleLeftOutlined';\r\nimport Right from '@mui/icons-material/ArrowCircleRightOutlined';\r\n\r\nconst LeftRightCtrl = (props) => {\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleCtrl = (direction, negativ) => (event) => {\r\n        event.preventDefault();\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            componentId: props.component,\r\n            command: {\r\n                controlId: direction,\r\n                val: negativ ? 15 : -15\r\n            }\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            componentId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User changed the position on \" + props.component)\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <IconButton onClick={handleCtrl(\"virtualPan\", false)} disabled={(socketCtx.connected && !appCtx.busyComps.has(props.component) && props.online) ? false : true}  >\r\n                <Left />\r\n            </IconButton>\r\n            <IconButton onClick={handleCtrl(\"virtualPan\", true)} disabled={(socketCtx.connected && !appCtx.busyComps.has(props.component) && props.online) ? false : true}  >\r\n                <Right />\r\n            </IconButton>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LeftRightCtrl;","import { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useSocketContext } from \"../../services/SocketContext\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport Slider from \"./SliderCtrl\";\r\nimport Switch from \"./Switch\"\r\nimport Select from \"./Select\";\r\nimport UpDownCtrl from \"./UpDownCtrl\"\r\nimport LeftRightCtrl from \"./LeftRightCtrl\";\r\nimport Box from '@mui/material/Box';\r\nimport styles from \"./Settings.module.css\"\r\n\r\nconst Settings = (props) => {\r\n    const socketCtx = useSocketContext();\r\n    var [mounted, setMounted] = useState(true);\r\n    const [onlineStatus, setOnlineStatus] = useState('');\r\n    const settingCtrl = useRef();\r\n\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#01bd7d',\r\n            },\r\n        }\r\n    })\r\n\r\n    const settingEmit = () => {\r\n        if (!mounted) {\r\n            mounted = true\r\n            setMounted(true)\r\n\r\n            socketCtx.socket.emit(\"command\", {\r\n                userId: socketCtx.username,\r\n                componentId: props.component,\r\n                command: \"getStatus\"\r\n            })\r\n\r\n            socketCtx.socket.on(\"status\", payload => {\r\n                if (payload.componentId === props.component) {\r\n                    console.log(\"Status of settings:   \", payload)\r\n                }\r\n            });\r\n\r\n            socketCtx.socket.on('footer', payload => {\r\n                if (payload.componentId === props.component) {\r\n                    props.newStatus(String(payload.status))\r\n                }\r\n            })\r\n\r\n            socketCtx.socket.emit('getFooter', props.component)\r\n\r\n            socketCtx.socket.on('getFooter', payload => {\r\n                if (payload.componentId === props.component) {\r\n                    setOnlineStatus(payload.online)\r\n                    props.newStatus(String(payload.status))\r\n                }\r\n            });\r\n            mounted = false;\r\n            setMounted(false);\r\n        }\r\n        return () => {\r\n            mounted = false;\r\n            setMounted(false);\r\n        }\r\n    }\r\n    settingCtrl.current = settingEmit;\r\n\r\n    useEffect(() => {\r\n        settingCtrl.current()\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={styles.UpDown}>\r\n                <UpDownCtrl component={props.component} online={onlineStatus} />\r\n            </div>\r\n            <div className={styles.LeftRight}>\r\n                <LeftRightCtrl component={props.component} online={onlineStatus} />\r\n            </div>\r\n            <Box sx={{ m: 2, width: 250 }} > <h1>Settings</h1> </Box>\r\n            <Select title=\"Resolution\" component={props.component} online={onlineStatus} command=\"frame size\" />\r\n            <Switch component={props.component} command=\"gray\" start='Color' end='Grey' online={onlineStatus} />\r\n            <Slider title=\"Contrast\" component={props.component} command=\"contrast\" min='-2' max='2' online={onlineStatus} />\r\n            <Slider title=\"Brightness\" component={props.component} command=\"brightness\" min='-2' max='2' online={onlineStatus} />\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default Settings\r\n","import Window from \"../UI/Window\";\r\nimport Settings from \"../UI/Settings\";\r\nimport styles from \"./Stream.module.css\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport { useSocketContext } from \"../../services/SocketContext\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { usePopUpContext } from \"../../services/PopUpContext\"\r\n\r\nconst Stream = (props) => {\r\n  const [footer, setFooter] = useState(props.footer);\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  var [alert, setAlert] = useState(false);\r\n  var [mounted, setMounted] = useState(true);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const appCtx = useAppContext();\r\n  const popupCtx = usePopUpContext();\r\n\r\n  const tempWebcam = useRef();\r\n  const tempWebcam2 = useRef();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id);\r\n    socketCtx.socket.emit(\"leave stream room\", { id: props.id, userId: socketCtx.username });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      componentId: props.id,\r\n      command: \"reset\"\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    if (!mounted) {\r\n      mounted = true\r\n      setMounted(true)\r\n      var time = new Date();\r\n      setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      setFooter(newFooter);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n      setMounted(false);\r\n    }\r\n  };\r\n\r\n  const webcamEmitPic = () => {\r\n    socketCtx.socket.on(\"data\", function (payload) {\r\n      var uint8Arr = new Uint8Array(payload.data.data);\r\n      var binary = \"\";\r\n      for (var i = 0; i < uint8Arr.length; i++) {\r\n        binary += String.fromCharCode(uint8Arr[i]);\r\n      }\r\n      var base64String = window.btoa(binary);\r\n\r\n      var img = new Image();\r\n      img.onload = function () {\r\n        var canvas = document.getElementById(\"ScreenCanvas\");\r\n        if (canvas != null) {\r\n          var ctx = canvas.getContext(\"2d\");\r\n          var x1 = 0,\r\n            y1 = 0,\r\n            x2 = 300,\r\n            y2 = 200;\r\n          ctx.drawImage(this, x1, y1, x2, y2);\r\n        }\r\n      };\r\n      img.src = \"data:image/jpg;base64,\" + base64String;\r\n    });\r\n  }\r\n\r\n  const webcamStartStreaming = () => {\r\n    socketCtx.socket.emit(\"join stream room\", { id: props.id, userId: socketCtx.username });\r\n  }\r\n\r\n  tempWebcam.current = webcamEmitPic;\r\n  tempWebcam2.current = webcamStartStreaming;\r\n\r\n  useEffect(() => {\r\n    tempWebcam.current();\r\n  }, [socketCtx.socket]);\r\n\r\n  useEffect(() => {\r\n    tempWebcam2.current();\r\n  }, []);\r\n\r\n  return (\r\n    <Window\r\n      header={props.title + \" (\" + props.id + \")\"}\r\n      top={props.top}\r\n      left={props.left}\r\n      width=\"1000px\"\r\n      height=\"430px\"\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      footer={footer}\r\n      newStatus={handleChangeFooter}\r\n    >\r\n      <div className={styles.Canvas}>\r\n        <canvas id=\"ScreenCanvas\" />\r\n      </div>\r\n      <div className={styles.Settings}>\r\n        <Settings component={props.id} footer={footer} newStatus={handleChangeFooter} />\r\n      </div>\r\n\r\n    </Window>\r\n  );\r\n};\r\nexport default Stream;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport { useSocketContext } from \"../../services/SocketContext\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport { Box } from '@mui/material';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Switch from './Switch';\r\nimport { GiLaserWarning } from \"react-icons/gi\"\r\n\r\nconst SwitchOnOff = (props) => {\r\n  const [switchStatus, setSwitchStatus] = useState(false);\r\n  const [onlineStatus, setOnlineStatus] = useState('');\r\n  const socketCtx = useSocketContext();\r\n  const tempSwitch = useRef();\r\n  const appCtx = useAppContext();\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: 'dark',\r\n      primary: {\r\n        light: '#01bd7d',\r\n        main: '#01bd7d',\r\n        dark: '#01bd7d',\r\n        contrastText: '#fff',\r\n      },\r\n    }\r\n  })\r\n\r\n  const switchFunction = () => {\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      componentId: props.component,\r\n      command: \"getStatus\"\r\n    })\r\n\r\n    socketCtx.socket.on(\"status\", payload => {\r\n      if (payload.componentId === props.component) {\r\n        setSwitchStatus(payload.status['laser'])\r\n      }\r\n    })\r\n\r\n    socketCtx.socket.on('footer', payload => {\r\n      if (payload.componentId === props.component) {\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    })\r\n\r\n    socketCtx.socket.emit('getFooter', props.component)\r\n\r\n    socketCtx.socket.on('getFooter', payload => {\r\n      if (props.component === 'Michelson_laser') {\r\n        setOnlineStatus(payload.online)\r\n\r\n      }\r\n\r\n      if (payload.componentId === props.component) {\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    })\r\n\r\n    appCtx.addLog(\"User set position on \" + props.component + \" to \" + switchStatus)\r\n  }\r\n\r\n  tempSwitch.current = switchFunction\r\n  useEffect(() => {\r\n    tempSwitch.current();\r\n  }, [socketCtx.socket])\r\n\r\n  return (\r\n    <div className=\"switchOnOff\">\r\n      <ThemeProvider theme={theme} >\r\n        <Box sx={{ m: 2, width: 250 }}>\r\n          <Switch component={props.component} command=\"switch\" start='Off' end='On' checked={switchStatus} icon={document.getElementById(\"icon\")} online={onlineStatus} />\r\n          <GiLaserWarning id=\"icon\" size={100} vertical-align=\"middle\" color=\"grey\" />\r\n        </Box>\r\n      </ThemeProvider>\r\n    </div>\r\n  )\r\n}\r\nexport default SwitchOnOff\r\n","import { useState } from \"react\";\r\nimport Window from \"../UI/Window\"\r\nimport SwitchOnOff from \"../UI/SwitchOnOff\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport { useSocketContext } from \"../../services/SocketContext\"\r\nimport { usePopUpContext } from \"../../services/PopUpContext\"\r\n\r\nconst LaserCtrl = (props) => {\r\n  const [footer, setFooter] = useState(props.footer);\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  var [alert, setAlert] = useState(false);\r\n  var [mounted, setMounted] = useState(true);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    if (!mounted) {\r\n      mounted = true\r\n      setMounted(true)\r\n      var time = new Date();\r\n      setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      setFooter(newFooter);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n      setMounted(false);\r\n    };\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      componentId: props.id,\r\n      command: \"reset\"\r\n    })\r\n\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  return (\r\n    <Window\r\n      header={props.title + \" (\" + props.id + \")\"}\r\n      top={props.top}\r\n      left={props.left}\r\n      height=\"200px\"\r\n      width=\"300px\"\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      newStatus={handleChangeFooter}\r\n      footer={footer}\r\n    >\r\n      <SwitchOnOff\r\n        component={props.id}\r\n        top=\"0\"\r\n        left=\"0\"\r\n        newStatus={handleChangeFooter}\r\n        footer={footer}\r\n      />\r\n    </Window>\r\n  )\r\n}\r\nexport default LaserCtrl;","import KM100 from \"../../assembly/KM100\";\r\nimport SM1ZP from \"../../assembly/SM1ZP\";\r\nimport Cam1 from \"../../assembly/Stream\";\r\nimport LaserCtrl from \"../../assembly/LaserCtrl\";\r\n\r\nconst MichelsonInterferometer = (props) => {\r\n  let footer = \"Initializing...\"\r\n  var zero = \"0\"\r\n\r\n  var height = window.innerHeight;\r\n  var width = window.innerWidth;\r\n  var halfWidth = width / 2;\r\n  var topHigh = String(height - (height / 3 * 2.7))\r\n  var topHighMiddle = String(height - (height / 1.4))\r\n  var topMiddle = String(height - (height / 2.15))\r\n  var leftLeft = String(width - (halfWidth * 1.9))\r\n  var leftMiddle = String(width - (halfWidth * 1.8))\r\n  var leftRight = String(width - (halfWidth * 0.47))\r\n  var leftMiddleRight = String(width - (halfWidth * 0.4))\r\n  var leftCam = String(width - (halfWidth * 1.485))\r\n\r\n  var componentList = ['Michelson_KM100', 'Michelson_linear', 'Michelson_laser', 'Michelson_LaserPower', 'Michelson_cam']\r\n  return (\r\n    <div>\r\n      {/* KM100 */}\r\n      {props.selected.has(componentList[0]) && (\r\n        <KM100\r\n          title=\"Mirror\"\r\n          id={componentList[0]}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftLeft}\r\n        />\r\n      )}\r\n      {/* Linear stage */}\r\n      {props.selected.has(componentList[1]) && (\r\n        <SM1ZP\r\n          title=\"Mirror Stage\"\r\n          id={componentList[1]}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topMiddle}\r\n          left={leftMiddle}\r\n        />\r\n      )}\r\n      {/* Laser ctrl */}\r\n      {props.selected.has(componentList[2]) && (\r\n        <KM100\r\n          title=\"Laser\"\r\n          id={componentList[2]}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topMiddle}\r\n          left={leftMiddleRight}\r\n        />\r\n      )}\r\n      {/* Laser power */}\r\n      {props.selected.has(componentList[3]) && (\r\n        <LaserCtrl\r\n          title=\"Power Supply\"\r\n          id={componentList[3]}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftRight}\r\n        />\r\n      )}\r\n      {/* Cam1 */}\r\n      {props.selected.has(componentList[4]) && (\r\n        <Cam1\r\n          title=\"Screen\"\r\n          id={componentList[4]}\r\n          footer={footer}\r\n          top={topHighMiddle}\r\n          left={leftCam}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MichelsonInterferometer;\r\n","//import { MdSettingsApplications } from \"react-icons/md\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport InfoWindow from \"../windows/InfoWindow\";\r\nimport MichelsonInterferometer from \"../experiment/MichelsonInterferometer/MichelsonInterferometer\";\r\nimport React from \"react\";\r\n\r\nconst ExperimentUILayer = () => {\r\n  const appCtx = useAppContext();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {appCtx.showInfoWindow && <InfoWindow />}\r\n      <MichelsonInterferometer\r\n        toggleSelect={appCtx.toggleSelectedComp}\r\n        selected={appCtx.selectedComps}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ExperimentUILayer;\r\n","import { Html } from \"@react-three/drei\";\r\n\r\nconst DescriptiveTag = (props) => {\r\n  const wrapperStyle = {\r\n    color: \"white\",\r\n    width: \"200px\",\r\n    height: \"30px\",\r\n  };\r\n  return <Html position={props.position} style={wrapperStyle} zIndexRange={[0, 10]} >\r\n\r\n    <div\r\n      style={{\r\n        height: \"150px\",\r\n        width: \"0px\",\r\n        \"borderLeft\": \"2px solid white\",\r\n        float: \"left\",\r\n      }}\r\n    ></div>\r\n    \r\n    <div style={{ \"marginLeft\": \"12px\" }}>\r\n      <span>\r\n        <b>{props.title}</b>\r\n      </span>\r\n      <br />\r\n      {props.description}\r\n      <br />\r\n      {props.status}\r\n    </div>\r\n  </Html>\r\n\r\n};\r\n\r\nexport default DescriptiveTag;\r\n","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef } from \"react\";\r\nimport { useGLTF, Box, Cylinder } from \"@react-three/drei\";\r\nimport DescriptiveTag from \"../../UI/DescriptiveTag\";\r\n\r\nexport default function Model({ ...props }) {\r\n  const group = useRef();\r\n  const { nodes, materials } = useGLTF(\"/XRTL_SPA/model/MI_110422.glb\");\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <group name=\"Scene\">\r\n        <group name=\"Optical elements\">\r\n          {/* BeamSplitter and Lens*/}\r\n          <Box\r\n            position={[-0.55, 0.66, -0.1]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.25, 0.25, 0.25]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          <Cylinder\r\n            position={[0.7, 0.67, -0.13]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, 0, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder>\r\n        </group>\r\n        <group\r\n          name=\"Mirror1\"\r\n          position={[-0.53, 0.67, 0.94]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"Michelson_KM100\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.3, 0]} title=\"Reference Mirror\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"SideMirrorMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"Michelson_KM100\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshBasicMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"SideMirrorMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n          <mesh\r\n            name=\"SideMirrorMesh_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n        <group\r\n          name=\"TranslateMirror\"\r\n          position={[-1.71, 0.67, -0.12]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"Michelson_linear\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.3, 0]} title=\"Transtlate Mirror\" description=\"Linear Stage\" />}\r\n          <mesh\r\n            name=\"TranslateMirrorMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"Michelson_linear\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshBasicMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"TranslateMirrorMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n          <mesh\r\n            name=\"TranslateMirrorMesh_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n        <group\r\n          name=\"Schirm\"\r\n          position={[-0.37, 0.86, -1.22]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"Michelson_cam\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.5, 0]} title=\"Screen\" description=\"Screen with Interference Pattern\" />}\r\n          <mesh\r\n            name=\"PlaneMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh.geometry}\r\n          >\r\n            {props.selected.has(\"Michelson_cam\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshBasicMaterial color=\"#eeeeee\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"PlaneMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh_1.geometry}\r\n            material={materials.BlackParts}\r\n          />\r\n        </group>\r\n        <group name=\"Base\">\r\n          {props.showTags && <DescriptiveTag position={[-0.5, 2, -0.1]} title=\"Beam Splitter\" description=\"50/50 Beam Splitter\" />}\r\n          {props.showTags && <DescriptiveTag position={[0.6, 2, -0.1]} title=\"Lens\" description=\"Lens for Beam Widening\" />}\r\n          <mesh\r\n            name=\"BaseMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.BaseMesh.geometry}\r\n            material={materials.BlackParts}\r\n          />\r\n          <mesh\r\n            name=\"BaseMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.BaseMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        </group>\r\n        <group\r\n          name=\"Laser\"\r\n          position={[1.56, 0.67, 0.14]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"Michelson_laser\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.2, -0.2]} title=\"Laser Alignment\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"LaserMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"Michelson_laser\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshBasicMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"LaserMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        </group>\r\n        <mesh\r\n          name=\"SD5\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.SD5.geometry}\r\n          material={materials.BlackParts}\r\n          position={[1.61, 0.25, -0.9]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"Michelson_LaserPower\")\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.3, 0]} title=\"Power Supply\" description=\"5V Laser Power Supply\" />}\r\n          {props.selected.has(\"Michelson_LaserPower\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshBasicMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        {props.showBeam &&\r\n          <mesh\r\n            name=\"LaserBeam\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserBeam.geometry}\r\n            material={materials.Laser}\r\n            position={[-0.3, 0.66, -0.15]}\r\n          />}\r\n      </group>\r\n    </group>\r\n  );\r\n}\r\n\r\nuseGLTF.preload(\"/XRTL_SPA/model/MI_110422.glb\");\r\n","import { Suspense } from \"react\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { OrbitControls, Environment } from \"@react-three/drei\";\r\nimport MI_110422 from \"../experiment/MichelsonInterferometer/MI_110422\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\n\r\nconst VirtualLayer = () => {\r\n  const appCtx = useAppContext();\r\n\r\n  if (appCtx.showVirtualLayer) {\r\n    return (\r\n      <Canvas\r\n        style={{\r\n          position: \"absolute\",\r\n          background: \"linear-gradient(Teal, Black)\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n        colorManagement\r\n        softShadows\r\n        camera={{ position: [0, 3, 5], fov: 40 }}\r\n      >\r\n        <Suspense fallback={null}>\r\n          {/* <Stats showPanel={0}  /> */}\r\n          <Environment files=\"/XRTL_SPA/hdri/autoshop.hdr\" />\r\n          <OrbitControls autoRotate={appCtx.autoRotate} />\r\n          <MI_110422\r\n            toggleSelect={appCtx.toggleSelectedComp}\r\n            selected={appCtx.selectedComps}\r\n            showTags={appCtx.showTags}\r\n            showBeam={appCtx.showBeam}\r\n          />\r\n        </Suspense>\r\n      </Canvas>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default VirtualLayer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);","import { useState, useContext, createContext } from \"react\";\r\nimport { useSocketContext } from \"./SocketContext\";\r\nimport { Alert, Snackbar } from '@mui/material';\r\nimport styles from \"./PopUp.module.css\";\r\n\r\nconst PopUpContext = createContext();\r\n\r\nexport function usePopUpContext() {\r\n    return useContext(PopUpContext);\r\n}\r\n\r\nexport function PopUpContextProvider({ children }) {\r\n    const [showPopUp, setShowPopUp] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [type, setType] = useState('info')\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    socketCtx.socket.on('error', error => {\r\n        setShowPopUp(true);\r\n        setText(error.errmsg);\r\n        setType('error');\r\n    })\r\n\r\n\r\n    const toggleShowPopUp = (newText, newType) => {\r\n        setText(newText);\r\n        setType(newType);\r\n        setShowPopUp(!showPopUp);\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            componentId: \"nckdj\",\r\n            command: {\r\n                controlId: 'cdcd',\r\n                val: 'dfcvdfc'\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setShowPopUp(false);\r\n    };\r\n\r\n    return (\r\n        <PopUpContext.Provider\r\n            value={{\r\n                showPopUp,\r\n                toggleShowPopUp\r\n            }}\r\n        >\r\n            <Snackbar open={showPopUp} autoHideDuration={2000} onClose={handleClose} >\r\n                <div className={styles.popUp}>\r\n                    <Alert variant=\"filled\" severity={type} onClose={() => { setShowPopUp(false) }}>{text}</Alert>\r\n                </div>\r\n            </Snackbar>\r\n            {children}\r\n        </PopUpContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"Chat_chatContainer__2t9V9\",\"chatMain\":\"Chat_chatMain__3D4RZ\",\"msgForm\":\"Chat_msgForm__QwCYM\",\"chatHandler\":\"Chat_chatHandler__MOOwD\",\"openChat\":\"Chat_openChat__3mhXq\",\"closeChat\":\"Chat_closeChat__3grSp\",\"buttonBlink\":\"Chat_buttonBlink__3hAtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"consoleContainer\":\"Console_consoleContainer__1dDWk\",\"consoleMain\":\"Console_consoleMain__SxxQK\",\"consoleHandler\":\"Console_consoleHandler__2f7jk\",\"openConsole\":\"Console_openConsole__1E2CK\",\"closeConsole\":\"Console_closeConsole__1Gp8h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"Window_window__2fRYn\",\"windowHeader\":\"Window_windowHeader__3GapY\",\"windowFooter\":\"Window_windowFooter__hmgmH\"};"],"sourceRoot":""}